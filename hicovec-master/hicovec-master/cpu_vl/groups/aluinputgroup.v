//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// Thu Mar 23 2017 17:03:56
//
//      Input file      : 
//      Component name  : aluinputgroup
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------


module aluinputgroup(clk, memory_in, x_in, y_in, a_in, ir_out, k_out, vector_out, a_out, b_out, sel_a, sel_b, sel_source_a, sel_source_b, load_ir);
   input         clk;
   
   input [31:0]  memory_in;
   input [31:0]  x_in;
   input [31:0]  y_in;
   input [31:0]  a_in;
   
   output [31:0] ir_out;
   output [31:0] k_out;
   output [31:0] vector_out;
   output [31:0] a_out;
   output [31:0] b_out;
   
   input [1:0]   sel_a;
   input [1:0]   sel_b;
   input         sel_source_a;
   input         sel_source_b;
   input         load_ir;
   
   
   wire [31:0]   instruction;
   wire [31:0]   n;
   wire [31:0]   mux_a_to_source;
   wire [31:0]   mux_b_to_source;
   
   
   dataregister ir(.clk(clk), .load(load_ir), .data_in(memory_in), .data_out(instruction));
   
   
   multiplexer4 #(32) mux_a(.selector(sel_a), .data_in_00(32'b00000000000000000000000000000000), .data_in_01(a_in), .data_in_10(x_in), .data_in_11(y_in), .data_out(mux_a_to_source));
   
   
   multiplexer4 #(32) mux_b(.selector(sel_b), .data_in_00(n), .data_in_01(a_in), .data_in_10(x_in), .data_in_11(y_in), .data_out(mux_b_to_source));
   
   
   multiplexer2 #(32) mux_source_a(.selector(sel_source_a), .data_in_0(mux_a_to_source), .data_in_1(32'b00000000000000000000000000000000), .data_out(a_out));
   
   
   multiplexer2 #(32) mux_source_b(.selector(sel_source_b), .data_in_0(mux_b_to_source), .data_in_1(memory_in), .data_out(b_out));
   
   assign n[15:0] = instruction[15:0];
   assign n[31:16] = 16'b0000000000000000;
   assign k_out = mux_b_to_source;
   assign vector_out = mux_a_to_source;
   assign ir_out = instruction;
   
endmodule
